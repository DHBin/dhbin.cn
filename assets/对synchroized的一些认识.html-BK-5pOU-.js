import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as o,e as i}from"./app-Ba--U_Af.js";const n={},r=i('<h1 id="对synchroized的一些认识" tabindex="-1"><a class="header-anchor" href="#对synchroized的一些认识"><span>对synchroized的一些认识</span></a></h1><blockquote><p>synchroized块可以保证块中的代码在同一时刻只能让一个线程访问，其他尝试进入代码块的线程都会被阻塞，直到代码块中的线程执行完。</p></blockquote><p>synchroized可以修饰以下不同的块</p><ul><li>实例方法</li><li>静态方法</li><li>实例方法中的代码块</li><li>静态方法中的代码块</li></ul><p>synchroized关键字修饰实例方法和实例对象时，锁住的是对象，而修饰静态方法和静态方法中的代码块时，锁住的是该类的类对象。</p><p>synchroized支持重入，并具有继承性，具体表现形式有两种：</p><ul><li>a，b方法同时被同一把锁修饰，a方法中可以执行b方法</li><li>子类可以执行父类方法</li></ul>',7),c=[r];function a(s,p){return t(),o("div",null,c)}const h=e(n,[["render",a],["__file","对synchroized的一些认识.html.vue"]]),m=JSON.parse('{"path":"/tech/java/%E5%AF%B9synchroized%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%A4%E8%AF%86.html","title":"对synchroized的一些认识","lang":"zh-CN","frontmatter":{"date":"2019-07-10T23:47:00.000Z","category":["Java"],"tag":["锁"],"description":"对synchroized的一些认识 synchroized块可以保证块中的代码在同一时刻只能让一个线程访问，其他尝试进入代码块的线程都会被阻塞，直到代码块中的线程执行完。 synchroized可以修饰以下不同的块 实例方法 静态方法 实例方法中的代码块 静态方法中的代码块 synchroized关键字修饰实例方法和实例对象时，锁住的是对象，而修饰静态...","head":[["meta",{"property":"og:url","content":"https://dhbin.cn/tech/java/%E5%AF%B9synchroized%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%A4%E8%AF%86.html"}],["meta",{"property":"og:site_name","content":"HB技术栈"}],["meta",{"property":"og:title","content":"对synchroized的一些认识"}],["meta",{"property":"og:description","content":"对synchroized的一些认识 synchroized块可以保证块中的代码在同一时刻只能让一个线程访问，其他尝试进入代码块的线程都会被阻塞，直到代码块中的线程执行完。 synchroized可以修饰以下不同的块 实例方法 静态方法 实例方法中的代码块 静态方法中的代码块 synchroized关键字修饰实例方法和实例对象时，锁住的是对象，而修饰静态..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-22T17:33:14.000Z"}],["meta",{"property":"article:author","content":"DHB"}],["meta",{"property":"article:tag","content":"锁"}],["meta",{"property":"article:published_time","content":"2019-07-10T23:47:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-22T17:33:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"对synchroized的一些认识\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-07-10T23:47:00.000Z\\",\\"dateModified\\":\\"2023-03-22T17:33:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"DHB\\",\\"url\\":\\"https://dhbin.cn\\"}]}"]]},"headers":[],"git":{"createdTime":1679384580000,"updatedTime":1679506394000,"contributors":[{"name":"dhb","email":"xx158@qq.com","commits":1},{"name":"donghaibin","email":"xx158@qq.com","commits":1}]},"readingTime":{"minutes":0.71,"words":213},"localizedDate":"2019年7月10日","excerpt":"\\n<blockquote>\\n<p>synchroized块可以保证块中的代码在同一时刻只能让一个线程访问，其他尝试进入代码块的线程都会被阻塞，直到代码块中的线程执行完。</p>\\n</blockquote>\\n<p>synchroized可以修饰以下不同的块</p>\\n<ul>\\n<li>实例方法</li>\\n<li>静态方法</li>\\n<li>实例方法中的代码块</li>\\n<li>静态方法中的代码块</li>\\n</ul>\\n<p>synchroized关键字修饰实例方法和实例对象时，锁住的是对象，而修饰静态方法和静态方法中的代码块时，锁住的是该类的类对象。</p>\\n<p>synchroized支持重入，并具有继承性，具体表现形式有两种：</p>","autoDesc":true}');export{h as comp,m as data};
