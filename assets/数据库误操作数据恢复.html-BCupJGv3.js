import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as l,c as o,a as s,b as n,d as i,e as a}from"./app-Ba--U_Af.js";const c={},r=a(`<h1 id="数据库误操作数据恢复" tabindex="-1"><a class="header-anchor" href="#数据库误操作数据恢复"><span>数据库误操作数据恢复</span></a></h1><h2 id="前提" tabindex="-1"><a class="header-anchor" href="#前提"><span>前提</span></a></h2><p>mysql必须有以下配置</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>binlog_format = row
binlog_row_image = full # 默认是full
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="实战" tabindex="-1"><a class="header-anchor" href="#实战"><span>实战</span></a></h2><p>假设有一张用户表，结构如下</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> tb_user
<span class="token punctuation">(</span>
    id       <span class="token keyword">bigint</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
    username <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>       <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    pwd      <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>       <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    sex      <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>        <span class="token operator">not</span> <span class="token boolean">null</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>数据sql如下：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> tb_user <span class="token punctuation">(</span>username<span class="token punctuation">,</span> pwd<span class="token punctuation">,</span> sex<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;111111&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token string">&#39;kk&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1111&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;鸡&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>小明一天不小心执行了delete全表的操作</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">delete</span> <span class="token keyword">from</span> tb_user <span class="token keyword">where</span> id <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>把数据全部删除了</p><h2 id="生成回滚sql" tabindex="-1"><a class="header-anchor" href="#生成回滚sql"><span>生成回滚sql</span></a></h2>`,13),u=s("strong",null,"ra",-1),d={href:"https://github.com/DHBin/ra",target:"_blank",rel:"noopener noreferrer"},k=a(`<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>数据库工具
支持binlog数据闪回、binlog转sql等等

支持mysql数据库版本：
5.5.x
5.6.x
5.7.x
8.0.x

Usage:
  ra [command]

Available Commands:
  flashback   数据闪回
  help        Help about any command
  tosql       通过binlog日志生成sql

Flags:
  -h, --help      help for ra
  -v, --version   version for ra

Use &quot;ra [command] --help&quot; for more information about a command.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>步骤一：查看当前的binlog文件名</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">show</span> <span class="token keyword">binary</span> logs<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>+----------------+---------+---------+
|Log_name        |File_size|Encrypted|
+----------------+---------+---------+
|mysql-bin.000010|7627     |No       |
|mysql-bin.000011|6699     |No       |
+----------------+---------+---------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除的binlog一般在最后的binlog文件中，<code>mysql-bin.000011</code>。根据小明的描述，当时操作的时间大概是<code>2023-04-26 08:41</code></p><p>步骤二：使用ra生成回滚sql</p><p>根据描述得到两个关键的信息</p><ul><li>binlog文件名</li><li>操作时间</li></ul><p>把时间范围圈在41分</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>ra flashback <span class="token parameter variable">--host</span> <span class="token number">127.0</span>.0.1 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> <span class="token number">123456</span>  --start-datetime <span class="token string">&quot;2023-04-26 08:41:00&quot;</span> --stop-datetime <span class="token string">&quot;2023-04-26 08:42:00&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行后生成回滚sql</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>test<span class="token punctuation">\`</span></span><span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>tb_user<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>id<span class="token punctuation">,</span> username<span class="token punctuation">,</span> pwd<span class="token punctuation">,</span> sex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># pos 5726 timestamp 1682469713</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>test<span class="token punctuation">\`</span></span><span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>tb_user<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>id<span class="token punctuation">,</span> username<span class="token punctuation">,</span> pwd<span class="token punctuation">,</span> sex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;111111&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># pos 5726 timestamp 1682469713</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>test<span class="token punctuation">\`</span></span><span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>tb_user<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>id<span class="token punctuation">,</span> username<span class="token punctuation">,</span> pwd<span class="token punctuation">,</span> sex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;kk&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1111&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;鸡&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># pos 5726 timestamp 1682469713</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>事情就是这样，小明不用跑路了，请小董喝了一瓶冰红茶。</p>`,13);function m(v,b){const e=p("ExternalLinkIcon");return l(),o("div",null,[r,s("p",null,[n("小明都想好跑路的国家了，小董出手相助，祭出今天要介绍的工具"),u,n("，github地址："),s("a",d,[n("https://github.com/DHBin/ra"),i(e)])]),k])}const y=t(c,[["render",m],["__file","数据库误操作数据恢复.html.vue"]]),q=JSON.parse('{"path":"/tech/mysql/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AF%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D.html","title":"数据库误操作数据恢复","lang":"zh-CN","frontmatter":{"date":"2023-04-26T00:00:00.000Z","category":["Mysql"],"tag":["Mysql","Flashback"],"description":"数据库误操作数据恢复 前提 mysql必须有以下配置 实战 假设有一张用户表，结构如下 数据sql如下： 小明一天不小心执行了delete全表的操作 把数据全部删除了 生成回滚sql 小明都想好跑路的国家了，小董出手相助，祭出今天要介绍的工具ra，github地址：https://github.com/DHBin/ra 步骤一：查看当前的binlog文...","head":[["meta",{"property":"og:url","content":"https://dhbin.cn/tech/mysql/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AF%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D.html"}],["meta",{"property":"og:site_name","content":"HB技术栈"}],["meta",{"property":"og:title","content":"数据库误操作数据恢复"}],["meta",{"property":"og:description","content":"数据库误操作数据恢复 前提 mysql必须有以下配置 实战 假设有一张用户表，结构如下 数据sql如下： 小明一天不小心执行了delete全表的操作 把数据全部删除了 生成回滚sql 小明都想好跑路的国家了，小董出手相助，祭出今天要介绍的工具ra，github地址：https://github.com/DHBin/ra 步骤一：查看当前的binlog文..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-26T01:59:14.000Z"}],["meta",{"property":"article:author","content":"DHB"}],["meta",{"property":"article:tag","content":"Mysql"}],["meta",{"property":"article:tag","content":"Flashback"}],["meta",{"property":"article:published_time","content":"2023-04-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-26T01:59:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据库误操作数据恢复\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-26T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-26T01:59:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"DHB\\",\\"url\\":\\"https://dhbin.cn\\"}]}"]]},"headers":[{"level":2,"title":"前提","slug":"前提","link":"#前提","children":[]},{"level":2,"title":"实战","slug":"实战","link":"#实战","children":[]},{"level":2,"title":"生成回滚sql","slug":"生成回滚sql","link":"#生成回滚sql","children":[]}],"git":{"createdTime":1682474354000,"updatedTime":1682474354000,"contributors":[{"name":"dhb","email":"xx158@qq.com","commits":1}]},"readingTime":{"minutes":1.55,"words":466},"localizedDate":"2023年4月26日","excerpt":"\\n<h2>前提</h2>\\n<p>mysql必须有以下配置</p>\\n<div class=\\"language-text\\" data-ext=\\"text\\" data-title=\\"text\\"><pre class=\\"language-text\\"><code>binlog_format = row\\nbinlog_row_image = full # 默认是full\\n</code></pre></div><h2>实战</h2>\\n<p>假设有一张用户表，结构如下</p>\\n<div class=\\"language-sql\\" data-ext=\\"sql\\" data-title=\\"sql\\"><pre class=\\"language-sql\\"><code><span class=\\"token keyword\\">create</span> <span class=\\"token keyword\\">table</span> tb_user\\n<span class=\\"token punctuation\\">(</span>\\n    id       <span class=\\"token keyword\\">bigint</span> <span class=\\"token keyword\\">primary</span> <span class=\\"token keyword\\">key</span> <span class=\\"token operator\\">not</span> <span class=\\"token boolean\\">null</span> <span class=\\"token keyword\\">auto_increment</span><span class=\\"token punctuation\\">,</span>\\n    username <span class=\\"token keyword\\">varchar</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">100</span><span class=\\"token punctuation\\">)</span>       <span class=\\"token operator\\">not</span> <span class=\\"token boolean\\">null</span><span class=\\"token punctuation\\">,</span>\\n    pwd      <span class=\\"token keyword\\">varchar</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">100</span><span class=\\"token punctuation\\">)</span>       <span class=\\"token operator\\">not</span> <span class=\\"token boolean\\">null</span><span class=\\"token punctuation\\">,</span>\\n    sex      <span class=\\"token keyword\\">varchar</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">)</span>        <span class=\\"token operator\\">not</span> <span class=\\"token boolean\\">null</span>\\n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{y as comp,q as data};
