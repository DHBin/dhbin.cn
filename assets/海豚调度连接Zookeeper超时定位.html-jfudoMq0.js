import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-Ba--U_Af.js";const e={},p=t(`<h1 id="海豚调度连接zookeeper超时定位" tabindex="-1"><a class="header-anchor" href="#海豚调度连接zookeeper超时定位"><span>海豚调度连接Zookeeper超时定位</span></a></h1><h2 id="过程" tabindex="-1"><a class="header-anchor" href="#过程"><span>过程</span></a></h2><p>在本地启动海豚调度的服务，出现zookeeper connect timeout异常，但是检查zookeeper节点都是正常的。经过一轮分析，发现个大坑！！！</p><p>海豚调度的zookeeper配置信息：</p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment">#</span>
<span class="token comment"># Licensed to the Apache Software Foundation (ASF) under one or more</span>
<span class="token comment"># contributor license agreements.  See the NOTICE file distributed with</span>
<span class="token comment"># this work for additional information regarding copyright ownership.</span>
<span class="token comment"># The ASF licenses this file to You under the Apache License, Version 2.0</span>
<span class="token comment"># (the &quot;License&quot;); you may not use this file except in compliance with</span>
<span class="token comment"># the License.  You may obtain a copy of the License at</span>
<span class="token comment">#</span>
<span class="token comment">#     http://www.apache.org/licenses/LICENSE-2.0</span>
<span class="token comment">#</span>
<span class="token comment"># Unless required by applicable law or agreed to in writing, software</span>
<span class="token comment"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>
<span class="token comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
<span class="token comment"># See the License for the specific language governing permissions and</span>
<span class="token comment"># limitations under the License.</span>
<span class="token comment">#</span>

<span class="token key attr-name">registry.plugin.name</span><span class="token punctuation">=</span><span class="token value attr-value">zookeeper</span>
<span class="token key attr-name">registry.servers</span><span class="token punctuation">=</span><span class="token value attr-value">x.x.x.x:2181</span>
<span class="token key attr-name">registry.namespace</span><span class="token punctuation">=</span><span class="token value attr-value">dolphinscheduler</span>
<span class="token key attr-name">registry.base.sleep.time.ms</span><span class="token punctuation">=</span><span class="token value attr-value">60</span>
<span class="token key attr-name">registry.max.sleep.ms</span><span class="token punctuation">=</span><span class="token value attr-value">300</span>
<span class="token key attr-name">registry.max.retries</span><span class="token punctuation">=</span><span class="token value attr-value">5</span>
<span class="token key attr-name">registry.session.timeout.ms</span><span class="token punctuation">=</span><span class="token value attr-value">30000</span>
<span class="token key attr-name">registry.connection.timeout.ms</span><span class="token punctuation">=</span><span class="token value attr-value">7500</span>
<span class="token key attr-name">registry.block.until.connected.wait</span><span class="token punctuation">=</span><span class="token value attr-value">600</span>
<span class="token key attr-name">registry.digest</span><span class="token punctuation">=</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>异常启动日志如下：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Caused by: org.apache.dolphinscheduler.registry.api.RegistryException: zookeeper connect timeout
	at org.apache.dolphinscheduler.plugin.registry.zookeeper.ZookeeperRegistry.start(ZookeeperRegistry.java:111) ~[classes/:na]
	at org.apache.dolphinscheduler.service.registry.RegistryClient.start(RegistryClient.java:291) ~[classes/:na]
	at org.apache.dolphinscheduler.service.registry.RegistryClient.afterConstruct(RegistryClient.java:81) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_332]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_332]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_332]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_332]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389) ~[spring-beans-5.3.12.jar:5.3.12]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:333) ~[spring-beans-5.3.12.jar:5.3.12]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:157) ~[spring-beans-5.3.12.jar:5.3.12]
	... 45 common frames omitted
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在配置文件中其中一个关键的配置：registry.block.until.connected.wait，意思是curator等待zookeeper连接超时，超过这个时间的话，异常退出。</p><p>海豚调度连接zookeeper关键代码</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> config<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">CuratorFrameworkFactory<span class="token punctuation">.</span>Builder</span> builder <span class="token operator">=</span>
            <span class="token class-name">CuratorFrameworkFactory</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                                   <span class="token punctuation">.</span><span class="token function">connectString</span><span class="token punctuation">(</span><span class="token constant">SERVERS</span><span class="token punctuation">.</span><span class="token function">getParameterValue</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">SERVERS</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                                   <span class="token punctuation">.</span><span class="token function">retryPolicy</span><span class="token punctuation">(</span><span class="token function">buildRetryPolicy</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">)</span>
                                   <span class="token punctuation">.</span><span class="token function">namespace</span><span class="token punctuation">(</span><span class="token constant">NAME_SPACE</span><span class="token punctuation">.</span><span class="token function">getParameterValue</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">NAME_SPACE</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                                   <span class="token punctuation">.</span><span class="token function">sessionTimeoutMs</span><span class="token punctuation">(</span><span class="token constant">SESSION_TIMEOUT_MS</span><span class="token punctuation">.</span><span class="token function">getParameterValue</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">SESSION_TIMEOUT_MS</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                                   <span class="token punctuation">.</span><span class="token function">connectionTimeoutMs</span><span class="token punctuation">(</span><span class="token constant">CONNECTION_TIMEOUT_MS</span><span class="token punctuation">.</span><span class="token function">getParameterValue</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">CONNECTION_TIMEOUT_MS</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">String</span> digest <span class="token operator">=</span> <span class="token constant">DIGEST</span><span class="token punctuation">.</span><span class="token function">getParameterValue</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">DIGEST</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Strings</span><span class="token punctuation">.</span><span class="token function">isNullOrEmpty</span><span class="token punctuation">(</span>digest<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">buildDigest</span><span class="token punctuation">(</span>builder<span class="token punctuation">,</span> digest<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        client <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        client<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// 这行！！！等待连接，超出配置时间异常退出</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>client<span class="token punctuation">.</span><span class="token function">blockUntilConnected</span><span class="token punctuation">(</span><span class="token constant">BLOCK_UNTIL_CONNECTED_WAIT_MS</span><span class="token punctuation">.</span><span class="token function">getParameterValue</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">BLOCK_UNTIL_CONNECTED_WAIT_MS</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">MILLISECONDS</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                client<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RegistryException</span><span class="token punctuation">(</span><span class="token string">&quot;zookeeper connect timeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RegistryException</span><span class="token punctuation">(</span><span class="token string">&quot;zookeeper connect error&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么，既然是因为等待超时导致的异常，尝试调整registry.block.until.connected.wait，从600ms修改到60000ms，也就60s，启动！！！等待大概20秒左右，正常启动了。真见鬼！！！这种情况下，我开始怀疑是不是网络有问题，开始抓包。</p><p>发现程序初始化完成，开始连接zookeeper，但迟迟没有发送tcp握手包，在这情况下，我开始怀疑代码的问题了。</p><p>通过分析zookeeper的源码，找出了慢的关键代码</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>        <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">startConnect</span><span class="token punctuation">(</span><span class="token class-name">InetSocketAddress</span> addr<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
            <span class="token comment">// initializing it for new connection</span>
            saslLoginFailed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            state <span class="token operator">=</span> <span class="token class-name">States</span><span class="token punctuation">.</span><span class="token constant">CONNECTING</span><span class="token punctuation">;</span>

            <span class="token comment">// 在这！！！</span>
            <span class="token function">setName</span><span class="token punctuation">(</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\(.*\\\\)&quot;</span><span class="token punctuation">,</span>
                    <span class="token string">&quot;(&quot;</span> <span class="token operator">+</span> addr<span class="token punctuation">.</span><span class="token function">getHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> addr<span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ZooKeeperSaslClient</span><span class="token punctuation">.</span><span class="token function">isEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    zooKeeperSaslClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZooKeeperSaslClient</span><span class="token punctuation">(</span><span class="token class-name">SaslServerPrincipal</span><span class="token punctuation">.</span><span class="token function">getServerPrincipal</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">LoginException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// An authentication error occurred when the SASL client tried to initialize:</span>
                    <span class="token comment">// for Kerberos this means that the client failed to authenticate with the KDC.</span>
                    <span class="token comment">// This is different from an authentication error that occurs during communication</span>
                    <span class="token comment">// with the Zookeeper server, which is handled below.</span>
                    <span class="token constant">LOG</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;SASL configuration failed: &quot;</span> <span class="token operator">+</span> e <span class="token operator">+</span> <span class="token string">&quot; Will continue connection to Zookeeper server without &quot;</span>
                      <span class="token operator">+</span> <span class="token string">&quot;SASL authentication, if Zookeeper server allows it.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    eventThread<span class="token punctuation">.</span><span class="token function">queueEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WatchedEvent</span><span class="token punctuation">(</span>
                      <span class="token class-name">Watcher<span class="token punctuation">.</span>Event<span class="token punctuation">.</span>EventType<span class="token punctuation">.</span>None</span><span class="token punctuation">,</span>
                      <span class="token class-name">Watcher<span class="token punctuation">.</span>Event<span class="token punctuation">.</span>KeeperState<span class="token punctuation">.</span>AuthFailed</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    saslLoginFailed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token function">logStartConnect</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">;</span>

            clientCnxnSocket<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从上面的代码看到setName这个方法，作用是修改线程名称的，其中调用了addr.getHostName()，罪魁祸首就是这个！！！</p><p>java.net.InetSocketAddress#getHostName，作用是获取主机名称，如果在初始化这个对象的时候，传入的hostname是一个域名，那么可以直接返回，但是！！！！如果是一个ip地址的话，那问题就来了。</p><p>如果是一个ip地址，getHostName可以通过ip地址去反查域名，这个操作不常见，原理是通过DNS查询PTR记录，但一般来说DNS服务器是没有这个记录，所以查询不到，查询不到就会从本地的hosts文件找，在都找不到的情况下，这过程大概会阻塞个20秒，海豚设置的创建连接超时是600ms，所以必定失败。</p><p>解决方法：</p><ol><li>如果要用ip的话，在DNS服务器添加该ip的PTR记录。但，这不是很现实</li><li>在本地的host文件中添加解析信息（推荐）</li></ol><p>例子：</p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>x.x.x.x my-zookeeper
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后~~~就正常了。问题到这里就解决了，所以在用zookeeper的时候，推荐使用域名的方式，不然就有可能出现连接zookeeper非常慢！！！</p><h2 id="进阶" tabindex="-1"><a class="header-anchor" href="#进阶"><span>进阶</span></a></h2><p>getHostName这个方法到底做了什么操作？</p><p>getHostName的源码中会调用到java.net.InetAddress#getHostFromNameService获取主机名称</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getHostFromNameService</span><span class="token punctuation">(</span><span class="token class-name">InetAddress</span> addr<span class="token punctuation">,</span> <span class="token keyword">boolean</span> check<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> host <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">NameService</span> nameService <span class="token operator">:</span> nameServices<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">// first lookup the hostname</span>
                <span class="token comment">// 关键代码在这</span>
                host <span class="token operator">=</span> nameService<span class="token punctuation">.</span><span class="token function">getHostByAddr</span><span class="token punctuation">(</span>addr<span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">/* check to see if calling code is allowed to know
                 * the hostname for this IP address, ie, connect to the host
                 */</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>check<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">SecurityManager</span> sec <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>sec <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        sec<span class="token punctuation">.</span><span class="token function">checkConnect</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>

                <span class="token comment">/* now get all the IP addresses for this hostname,
                 * and make sure one of them matches the original IP
                 * address. We do this to try and prevent spoofing.
                 */</span>

                <span class="token class-name">InetAddress</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getAllByName0</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> check<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">boolean</span> ok <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span><span class="token punctuation">(</span>arr <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token operator">!</span>ok <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        ok <span class="token operator">=</span> addr<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>

                <span class="token comment">//XXX: if it looks a spoof just return the address?</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    host <span class="token operator">=</span> addr<span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> host<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">break</span><span class="token punctuation">;</span>

            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SecurityException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                host <span class="token operator">=</span> addr<span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnknownHostException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                host <span class="token operator">=</span> addr<span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// let next provider resolve the hostname</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> host<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最终会调用到java.net.Inet4AddressImpl#getHostByAddr方法</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token class-name">String</span> <span class="token function">getHostByAddr</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> addr<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnknownHostException</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>native方法，翻jdk源码，定位到一下代码</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token comment">/*
 * Class:     java_net_Inet6AddressImpl
 * Method:    getHostByAddr
 * Signature: (I)Ljava/lang/String;
 */</span>
JNIEXPORT jstring JNICALL
<span class="token function">Java_java_net_Inet6AddressImpl_getHostByAddr</span><span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jobject this<span class="token punctuation">,</span>
                                            jbyteArray addrArray<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    jstring ret <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">AF_INET6</span></span>
    <span class="token keyword">char</span> host<span class="token punctuation">[</span>NI_MAXHOST<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> error <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    jbyte caddr<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> him4<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">sockaddr_in6</span> him6<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>sa<span class="token punctuation">;</span>

    <span class="token comment">/*
     * For IPv4 addresses construct a sockaddr_in structure.
     */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">GetArrayLength</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> addrArray<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        jint addr<span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">GetByteArrayRegion</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> addrArray<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> caddr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        addr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>caddr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        addr <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>caddr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff0000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        addr <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>caddr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff00</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        addr <span class="token operator">|=</span> <span class="token punctuation">(</span>caddr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">memset</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>him4<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>him4<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        him4<span class="token punctuation">.</span>sin_addr<span class="token punctuation">.</span>s_addr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint32_t</span><span class="token punctuation">)</span> <span class="token function">htonl</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        him4<span class="token punctuation">.</span>sin_family <span class="token operator">=</span> AF_INET<span class="token punctuation">;</span>
        sa <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>him4<span class="token punctuation">;</span>
        len <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>him4<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">/*
         * For IPv6 address construct a sockaddr_in6 structure.
         */</span>
        <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">GetByteArrayRegion</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> addrArray<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> caddr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">memset</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>him6<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>him6<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">memcpy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>him6<span class="token punctuation">.</span>sin6_addr<span class="token punctuation">)</span><span class="token punctuation">,</span> caddr<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">in6_addr</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
        him6<span class="token punctuation">.</span>sin6_family <span class="token operator">=</span> AF_INET6<span class="token punctuation">;</span>
        sa <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>him6 <span class="token punctuation">;</span>
        len <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>him6<span class="token punctuation">)</span> <span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 关键代码在这。。。。</span>
    error <span class="token operator">=</span> <span class="token function">getnameinfo</span><span class="token punctuation">(</span>sa<span class="token punctuation">,</span> len<span class="token punctuation">,</span> host<span class="token punctuation">,</span> NI_MAXHOST<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
                        NI_NAMEREQD<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ret <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> host<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/* AF_INET6 */</span></span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">JNU_ThrowByName</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> JNU_JAVANETPKG <span class="token string">&quot;UnknownHostException&quot;</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在Linux中，getnameinfo是glibc的一个函数，作用就是获取主机信息</p><p>那么在glibc的代码中，关键的代码如下：</p><p>https://github.com/lattera/glibc/blob/master/inet/getnameinfo.c</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token comment">/* Convert host name, AF_INET/AF_INET6 case, name only.  */</span>
<span class="token keyword">static</span> <span class="token keyword">int</span>
<span class="token function">gni_host_inet_name</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">scratch_buffer</span> <span class="token operator">*</span>tmpbuf<span class="token punctuation">,</span>
		    <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>sa<span class="token punctuation">,</span> <span class="token class-name">socklen_t</span> addrlen<span class="token punctuation">,</span>
		    <span class="token keyword">char</span> <span class="token operator">*</span>host<span class="token punctuation">,</span> <span class="token class-name">socklen_t</span> hostlen<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token keyword">int</span> herrno<span class="token punctuation">;</span>
  <span class="token keyword">struct</span> <span class="token class-name">hostent</span> th<span class="token punctuation">;</span>
  <span class="token keyword">struct</span> <span class="token class-name">hostent</span> <span class="token operator">*</span>h <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>sa<span class="token operator">-&gt;</span>sa_family <span class="token operator">==</span> AF_INET6<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">sockaddr_in6</span> <span class="token operator">*</span>sin6p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">sockaddr_in6</span> <span class="token operator">*</span><span class="token punctuation">)</span> sa<span class="token punctuation">;</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">__gethostbyaddr_r</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span>sin6p<span class="token operator">-&gt;</span>sin6_addr<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">in6_addr</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
				AF_INET6<span class="token punctuation">,</span> <span class="token operator">&amp;</span>th<span class="token punctuation">,</span> tmpbuf<span class="token operator">-&gt;</span>data<span class="token punctuation">,</span> tmpbuf<span class="token operator">-&gt;</span>length<span class="token punctuation">,</span>
				<span class="token operator">&amp;</span>h<span class="token punctuation">,</span> <span class="token operator">&amp;</span>herrno<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>herrno <span class="token operator">==</span> NETDB_INTERNAL <span class="token operator">&amp;&amp;</span> errno <span class="token operator">==</span> ERANGE<span class="token punctuation">)</span>
	  <span class="token punctuation">{</span>
	    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">scratch_buffer_grow</span> <span class="token punctuation">(</span>tmpbuf<span class="token punctuation">)</span><span class="token punctuation">)</span>
	      <span class="token punctuation">{</span>
		<span class="token function">__set_h_errno</span> <span class="token punctuation">(</span>herrno<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> EAI_MEMORY<span class="token punctuation">;</span>
	      <span class="token punctuation">}</span>
	  <span class="token punctuation">}</span>
	<span class="token keyword">else</span>
	  <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> <span class="token operator">*</span>sinp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> <span class="token operator">*</span><span class="token punctuation">)</span> sa<span class="token punctuation">;</span>
      <span class="token comment">// 关键代码在这</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">__gethostbyaddr_r</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span>sinp<span class="token operator">-&gt;</span>sin_addr<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">in_addr</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
				AF_INET<span class="token punctuation">,</span> <span class="token operator">&amp;</span>th<span class="token punctuation">,</span> tmpbuf<span class="token operator">-&gt;</span>data<span class="token punctuation">,</span> tmpbuf<span class="token operator">-&gt;</span>length<span class="token punctuation">,</span>
				<span class="token operator">&amp;</span>h<span class="token punctuation">,</span> <span class="token operator">&amp;</span>herrno<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>herrno <span class="token operator">==</span> NETDB_INTERNAL <span class="token operator">&amp;&amp;</span> errno <span class="token operator">==</span> ERANGE<span class="token punctuation">)</span>
	    <span class="token punctuation">{</span>
	      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">scratch_buffer_grow</span> <span class="token punctuation">(</span>tmpbuf<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
		  <span class="token function">__set_h_errno</span> <span class="token punctuation">(</span>herrno<span class="token punctuation">)</span><span class="token punctuation">;</span>
		  <span class="token keyword">return</span> EAI_MEMORY<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	    <span class="token punctuation">}</span>
	<span class="token keyword">else</span>
	  <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>好了，不追下去了，看到while语句块，大概是在这里阻塞了10几20秒。。。</p>`,35),o=[p];function c(i,l){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","海豚调度连接Zookeeper超时定位.html.vue"]]),d=JSON.parse('{"path":"/tech/java/%E6%B5%B7%E8%B1%9A%E8%B0%83%E5%BA%A6%E8%BF%9E%E6%8E%A5Zookeeper%E8%B6%85%E6%97%B6%E5%AE%9A%E4%BD%8D.html","title":"海豚调度连接Zookeeper超时定位","lang":"zh-CN","frontmatter":{"date":"2023-04-06T00:00:00.000Z","category":["Java"],"tag":["问题排查","海豚调度","Zookeeper"],"description":"海豚调度连接Zookeeper超时定位 过程 在本地启动海豚调度的服务，出现zookeeper connect timeout异常，但是检查zookeeper节点都是正常的。经过一轮分析，发现个大坑！！！ 海豚调度的zookeeper配置信息： 异常启动日志如下： 在配置文件中其中一个关键的配置：registry.block.until.connect...","head":[["meta",{"property":"og:url","content":"https://dhbin.cn/tech/java/%E6%B5%B7%E8%B1%9A%E8%B0%83%E5%BA%A6%E8%BF%9E%E6%8E%A5Zookeeper%E8%B6%85%E6%97%B6%E5%AE%9A%E4%BD%8D.html"}],["meta",{"property":"og:site_name","content":"HB技术栈"}],["meta",{"property":"og:title","content":"海豚调度连接Zookeeper超时定位"}],["meta",{"property":"og:description","content":"海豚调度连接Zookeeper超时定位 过程 在本地启动海豚调度的服务，出现zookeeper connect timeout异常，但是检查zookeeper节点都是正常的。经过一轮分析，发现个大坑！！！ 海豚调度的zookeeper配置信息： 异常启动日志如下： 在配置文件中其中一个关键的配置：registry.block.until.connect..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-06T05:34:18.000Z"}],["meta",{"property":"article:author","content":"DHB"}],["meta",{"property":"article:tag","content":"问题排查"}],["meta",{"property":"article:tag","content":"海豚调度"}],["meta",{"property":"article:tag","content":"Zookeeper"}],["meta",{"property":"article:published_time","content":"2023-04-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-06T05:34:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"海豚调度连接Zookeeper超时定位\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-06T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-06T05:34:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"DHB\\",\\"url\\":\\"https://dhbin.cn\\"}]}"]]},"headers":[{"level":2,"title":"过程","slug":"过程","link":"#过程","children":[]},{"level":2,"title":"进阶","slug":"进阶","link":"#进阶","children":[]}],"git":{"createdTime":1680759258000,"updatedTime":1680759258000,"contributors":[{"name":"dhb","email":"xx158@qq.com","commits":1}]},"readingTime":{"minutes":5.29,"words":1588},"localizedDate":"2023年4月6日","excerpt":"\\n<h2>过程</h2>\\n<p>在本地启动海豚调度的服务，出现zookeeper connect timeout异常，但是检查zookeeper节点都是正常的。经过一轮分析，发现个大坑！！！</p>\\n<p>海豚调度的zookeeper配置信息：</p>\\n<div class=\\"language-properties\\" data-ext=\\"properties\\" data-title=\\"properties\\"><pre class=\\"language-properties\\"><code><span class=\\"token comment\\">#</span>\\n<span class=\\"token comment\\"># Licensed to the Apache Software Foundation (ASF) under one or more</span>\\n<span class=\\"token comment\\"># contributor license agreements.  See the NOTICE file distributed with</span>\\n<span class=\\"token comment\\"># this work for additional information regarding copyright ownership.</span>\\n<span class=\\"token comment\\"># The ASF licenses this file to You under the Apache License, Version 2.0</span>\\n<span class=\\"token comment\\"># (the \\"License\\"); you may not use this file except in compliance with</span>\\n<span class=\\"token comment\\"># the License.  You may obtain a copy of the License at</span>\\n<span class=\\"token comment\\">#</span>\\n<span class=\\"token comment\\">#     http://www.apache.org/licenses/LICENSE-2.0</span>\\n<span class=\\"token comment\\">#</span>\\n<span class=\\"token comment\\"># Unless required by applicable law or agreed to in writing, software</span>\\n<span class=\\"token comment\\"># distributed under the License is distributed on an \\"AS IS\\" BASIS,</span>\\n<span class=\\"token comment\\"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>\\n<span class=\\"token comment\\"># See the License for the specific language governing permissions and</span>\\n<span class=\\"token comment\\"># limitations under the License.</span>\\n<span class=\\"token comment\\">#</span>\\n\\n<span class=\\"token key attr-name\\">registry.plugin.name</span><span class=\\"token punctuation\\">=</span><span class=\\"token value attr-value\\">zookeeper</span>\\n<span class=\\"token key attr-name\\">registry.servers</span><span class=\\"token punctuation\\">=</span><span class=\\"token value attr-value\\">x.x.x.x:2181</span>\\n<span class=\\"token key attr-name\\">registry.namespace</span><span class=\\"token punctuation\\">=</span><span class=\\"token value attr-value\\">dolphinscheduler</span>\\n<span class=\\"token key attr-name\\">registry.base.sleep.time.ms</span><span class=\\"token punctuation\\">=</span><span class=\\"token value attr-value\\">60</span>\\n<span class=\\"token key attr-name\\">registry.max.sleep.ms</span><span class=\\"token punctuation\\">=</span><span class=\\"token value attr-value\\">300</span>\\n<span class=\\"token key attr-name\\">registry.max.retries</span><span class=\\"token punctuation\\">=</span><span class=\\"token value attr-value\\">5</span>\\n<span class=\\"token key attr-name\\">registry.session.timeout.ms</span><span class=\\"token punctuation\\">=</span><span class=\\"token value attr-value\\">30000</span>\\n<span class=\\"token key attr-name\\">registry.connection.timeout.ms</span><span class=\\"token punctuation\\">=</span><span class=\\"token value attr-value\\">7500</span>\\n<span class=\\"token key attr-name\\">registry.block.until.connected.wait</span><span class=\\"token punctuation\\">=</span><span class=\\"token value attr-value\\">600</span>\\n<span class=\\"token key attr-name\\">registry.digest</span><span class=\\"token punctuation\\">=</span>\\n</code></pre></div>","autoDesc":true}');export{k as comp,d as data};
